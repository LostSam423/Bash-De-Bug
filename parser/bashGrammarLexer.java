<<<<<<< HEAD
// Generated from bashGrammar.g4 by ANTLR 4.8
=======
// Generated from bashGrammar.g4 by ANTLR 4.9
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class bashGrammarLexer extends Lexer {
<<<<<<< HEAD
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }
=======
	static { RuntimeMetaData.checkVersion("4.9", RuntimeMetaData.VERSION); }
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
<<<<<<< HEAD
		T__0=1, SINGLE_STRING=2, DOUBLE_STRING=3, COMMENT=4, SPACE=5, IF=6, THEN=7, 
		ELIF=8, ELSE=9, FI=10, FOR=11, DO=12, DONE=13, SED=14, COMMAND=15, RHS_ASSIGNMENT=16, 
		OPEN_BRACKETS=17, CLOSE_BRACKETS=18, VAR=19, WEBSITE=20, FILENAME=21, 
		SED_FLAG=22, BASH_VAR=23, VAL=24, ASSIGN=25, SEMICOLON=26, LOGICAL_OP=27, 
		INCREMENT=28, COMPARE=29, BLOB=30, OTHER=31;
=======
		T__0=1, OPEN_PAR=2, CLOSE_PAR=3, OPEN_CUR=4, CLOSE_CUR=5, OPEN_BOX=6, 
		CLOSE_BOX=7, RHS_ASSIGNMENT=8, SINGLE_STRING=9, DOUBLE_STRING=10, COMMENT=11, 
		SPACE=12, FUNCTION=13, IF=14, THEN=15, ELIF=16, ELSE=17, FI=18, FOR=19, 
		WHILE=20, DO=21, BREAK=22, CONTINUE=23, DONE=24, COMMAND=25, VAR=26, BASH_VAR=27, 
		VAL=28, ASSIGN=29, SEMICOLON=30, LOGICAL_OP=31, INCREMENT=32, COMPARE=33, 
		BLOB=34, OTHER=35;
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
<<<<<<< HEAD
			"T__0", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "OPERATOR", "SINGLE_STRING", 
			"DOUBLE_STRING", "COMMENT", "SPACE", "IF", "THEN", "ELIF", "ELSE", "FI", 
			"FOR", "DO", "DONE", "SED", "COMMAND", "RHS_ASSIGNMENT", "OPEN_BRACKETS", 
			"CLOSE_BRACKETS", "VAR", "WEBSITE", "FILENAME", "SED_FLAG", "BASH_VAR", 
			"VAL", "ASSIGN", "SEMICOLON", "LOGICAL_OP", "INCREMENT", "COMPARE", "BLOB", 
			"OTHER"
=======
			"T__0", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "OPEN_PAR", "CLOSE_PAR", 
			"OPEN_CUR", "CLOSE_CUR", "OPEN_BOX", "CLOSE_BOX", "RHS_ASSIGNMENT", "SINGLE_STRING", 
			"DOUBLE_STRING", "COMMENT", "SPACE", "FUNCTION", "IF", "THEN", "ELIF", 
			"ELSE", "FI", "FOR", "WHILE", "DO", "BREAK", "CONTINUE", "DONE", "COMMAND", 
			"VAR", "BASH_VAR", "VAL", "ASSIGN", "SEMICOLON", "LOGICAL_OP", "INCREMENT", 
			"COMPARE", "BLOB", "OTHER"
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
<<<<<<< HEAD
			null, "','", null, null, null, null, "'if'", "'then'", "'elif'", "'else'", 
			"'fi'", "'for'", "'do'", "'done'", "'sed'", null, null, null, null, null, 
			null, null, null, null, null, "'='", "';'"
=======
			null, "','", "'('", "')'", "'{'", "'}'", "'['", "']'", null, null, null, 
			null, null, "'function'", "'if'", "'then'", "'elif'", "'else'", "'fi'", 
			"'for'", "'while'", "'do'", "'break'", "'continue'", "'done'", null, 
			null, null, null, "'='", "';'"
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
<<<<<<< HEAD
			null, null, "SINGLE_STRING", "DOUBLE_STRING", "COMMENT", "SPACE", "IF", 
			"THEN", "ELIF", "ELSE", "FI", "FOR", "DO", "DONE", "SED", "COMMAND", 
			"RHS_ASSIGNMENT", "OPEN_BRACKETS", "CLOSE_BRACKETS", "VAR", "WEBSITE", 
			"FILENAME", "SED_FLAG", "BASH_VAR", "VAL", "ASSIGN", "SEMICOLON", "LOGICAL_OP", 
			"INCREMENT", "COMPARE", "BLOB", "OTHER"
=======
			null, null, "OPEN_PAR", "CLOSE_PAR", "OPEN_CUR", "CLOSE_CUR", "OPEN_BOX", 
			"CLOSE_BOX", "RHS_ASSIGNMENT", "SINGLE_STRING", "DOUBLE_STRING", "COMMENT", 
			"SPACE", "FUNCTION", "IF", "THEN", "ELIF", "ELSE", "FI", "FOR", "WHILE", 
			"DO", "BREAK", "CONTINUE", "DONE", "COMMAND", "VAR", "BASH_VAR", "VAL", 
			"ASSIGN", "SEMICOLON", "LOGICAL_OP", "INCREMENT", "COMPARE", "BLOB", 
			"OTHER"
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public bashGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "bashGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
<<<<<<< HEAD
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2!\u0156\b\1\4\2\t"+
=======
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2%\u0127\b\1\4\2\t"+
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
<<<<<<< HEAD
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6"+
		"\3\7\3\7\3\7\3\7\5\7Z\n\7\3\b\3\b\6\b^\n\b\r\b\16\b_\3\b\3\b\3\t\3\t\6"+
		"\tf\n\t\r\t\16\tg\3\t\3\t\3\n\3\n\7\nn\n\n\f\n\16\nq\13\n\3\n\3\n\3\13"+
		"\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\5"+
		"\25\u00af\n\25\3\26\3\26\3\26\3\26\7\26\u00b5\n\26\f\26\16\26\u00b8\13"+
		"\26\3\26\3\26\3\26\3\26\3\26\6\26\u00bf\n\26\r\26\16\26\u00c0\3\26\5\26"+
		"\u00c4\n\26\3\27\3\27\3\27\3\27\5\27\u00ca\n\27\3\30\3\30\3\30\3\30\5"+
		"\30\u00d0\n\30\3\31\3\31\7\31\u00d4\n\31\f\31\16\31\u00d7\13\31\3\32\3"+
		"\32\3\32\3\32\3\32\3\32\5\32\u00df\n\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\5\32\u00e8\n\32\3\32\3\32\3\32\5\32\u00ed\n\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\6\32\u00f5\n\32\r\32\16\32\u00f6\3\32\3\32\6\32\u00fb\n"+
		"\32\r\32\16\32\u00fc\3\32\3\32\6\32\u0101\n\32\r\32\16\32\u0102\3\32\5"+
		"\32\u0106\n\32\7\32\u0108\n\32\f\32\16\32\u010b\13\32\3\33\3\33\3\33\3"+
		"\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\3\34\5\34\u0122\n\34\3\35\3\35\3\35\3\36\5\36\u0128\n\36"+
		"\3\36\6\36\u012b\n\36\r\36\16\36\u012c\3\37\3\37\3 \3 \3!\3!\3!\3!\5!"+
		"\u0137\n!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u0145\n"+
		"\"\3#\3#\3#\3#\3#\3#\3#\5#\u014e\n#\3$\6$\u0151\n$\r$\16$\u0152\3%\3%"+
		"\4\u00b6\u0152\2&\3\3\5\2\7\2\t\2\13\2\r\2\17\4\21\5\23\6\25\7\27\b\31"+
		"\t\33\n\35\13\37\f!\r#\16%\17\'\20)\21+\22-\23/\24\61\25\63\26\65\27\67"+
		"\309\31;\32=\33?\34A\35C\36E\37G I!\3\2\17\3\2))\3\2$$\4\2\f\f\17\17\5"+
		"\2\13\f\17\17\"\"\t\2##&(,\60\62;B\\``c|\5\2C\\aac|\6\2\62;C\\aac|\4\2"+
		"\62;c|\3\2c|\6\2%%\62;C\\c|\5\2\62;C\\c|\4\2>>@@\t\2##&(*\60\62;B\\``"+
		"c|\2\u0177\2\3\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2"+
		"\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2"+
		"\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2"+
		"-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2"+
		"\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2"+
		"E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\3K\3\2\2\2\5M\3\2\2\2\7O\3\2\2\2\tQ\3"+
		"\2\2\2\13S\3\2\2\2\rY\3\2\2\2\17[\3\2\2\2\21c\3\2\2\2\23k\3\2\2\2\25t"+
		"\3\2\2\2\27v\3\2\2\2\31y\3\2\2\2\33~\3\2\2\2\35\u0083\3\2\2\2\37\u0088"+
		"\3\2\2\2!\u008b\3\2\2\2#\u008f\3\2\2\2%\u0092\3\2\2\2\'\u0097\3\2\2\2"+
		")\u00ae\3\2\2\2+\u00c3\3\2\2\2-\u00c9\3\2\2\2/\u00cf\3\2\2\2\61\u00d1"+
		"\3\2\2\2\63\u00ec\3\2\2\2\65\u010c\3\2\2\2\67\u0121\3\2\2\29\u0123\3\2"+
		"\2\2;\u0127\3\2\2\2=\u012e\3\2\2\2?\u0130\3\2\2\2A\u0136\3\2\2\2C\u0144"+
		"\3\2\2\2E\u014d\3\2\2\2G\u0150\3\2\2\2I\u0154\3\2\2\2KL\7.\2\2L\4\3\2"+
		"\2\2MN\7-\2\2N\6\3\2\2\2OP\7/\2\2P\b\3\2\2\2QR\7,\2\2R\n\3\2\2\2ST\7\61"+
		"\2\2T\f\3\2\2\2UZ\5\5\3\2VZ\5\7\4\2WZ\5\t\5\2XZ\5\13\6\2YU\3\2\2\2YV\3"+
		"\2\2\2YW\3\2\2\2YX\3\2\2\2Z\16\3\2\2\2[]\7)\2\2\\^\n\2\2\2]\\\3\2\2\2"+
		"^_\3\2\2\2_]\3\2\2\2_`\3\2\2\2`a\3\2\2\2ab\7)\2\2b\20\3\2\2\2ce\7$\2\2"+
		"df\n\3\2\2ed\3\2\2\2fg\3\2\2\2ge\3\2\2\2gh\3\2\2\2hi\3\2\2\2ij\7$\2\2"+
		"j\22\3\2\2\2ko\7%\2\2ln\n\4\2\2ml\3\2\2\2nq\3\2\2\2om\3\2\2\2op\3\2\2"+
		"\2pr\3\2\2\2qo\3\2\2\2rs\b\n\2\2s\24\3\2\2\2tu\t\5\2\2u\26\3\2\2\2vw\7"+
		"k\2\2wx\7h\2\2x\30\3\2\2\2yz\7v\2\2z{\7j\2\2{|\7g\2\2|}\7p\2\2}\32\3\2"+
		"\2\2~\177\7g\2\2\177\u0080\7n\2\2\u0080\u0081\7k\2\2\u0081\u0082\7h\2"+
		"\2\u0082\34\3\2\2\2\u0083\u0084\7g\2\2\u0084\u0085\7n\2\2\u0085\u0086"+
		"\7u\2\2\u0086\u0087\7g\2\2\u0087\36\3\2\2\2\u0088\u0089\7h\2\2\u0089\u008a"+
		"\7k\2\2\u008a \3\2\2\2\u008b\u008c\7h\2\2\u008c\u008d\7q\2\2\u008d\u008e"+
		"\7t\2\2\u008e\"\3\2\2\2\u008f\u0090\7f\2\2\u0090\u0091\7q\2\2\u0091$\3"+
		"\2\2\2\u0092\u0093\7f\2\2\u0093\u0094\7q\2\2\u0094\u0095\7p\2\2\u0095"+
		"\u0096\7g\2\2\u0096&\3\2\2\2\u0097\u0098\7u\2\2\u0098\u0099\7g\2\2\u0099"+
		"\u009a\7f\2\2\u009a(\3\2\2\2\u009b\u009c\7g\2\2\u009c\u009d\7e\2\2\u009d"+
		"\u009e\7j\2\2\u009e\u00af\7q\2\2\u009f\u00a0\7e\2\2\u00a0\u00a1\7c\2\2"+
		"\u00a1\u00af\7v\2\2\u00a2\u00a3\7n\2\2\u00a3\u00af\7u\2\2\u00a4\u00a5"+
		"\7n\2\2\u00a5\u00af\7n\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7k\2\2\u00a8"+
		"\u00a9\7o\2\2\u00a9\u00af\7g\2\2\u00aa\u00ab\7y\2\2\u00ab\u00ac\7i\2\2"+
		"\u00ac\u00ad\7g\2\2\u00ad\u00af\7v\2\2\u00ae\u009b\3\2\2\2\u00ae\u009f"+
		"\3\2\2\2\u00ae\u00a2\3\2\2\2\u00ae\u00a4\3\2\2\2\u00ae\u00a6\3\2\2\2\u00ae"+
		"\u00aa\3\2\2\2\u00af*\3\2\2\2\u00b0\u00b1\7&\2\2\u00b1\u00b2\7}\2\2\u00b2"+
		"\u00b6\3\2\2\2\u00b3\u00b5\13\2\2\2\u00b4\u00b3\3\2\2\2\u00b5\u00b8\3"+
		"\2\2\2\u00b6\u00b7\3\2\2\2\u00b6\u00b4\3\2\2\2\u00b7\u00b9\3\2\2\2\u00b8"+
		"\u00b6\3\2\2\2\u00b9\u00c4\7\177\2\2\u00ba\u00bb\7&\2\2\u00bb\u00bc\7"+
		"*\2\2\u00bc\u00be\3\2\2\2\u00bd\u00bf\t\6\2\2\u00be\u00bd\3\2\2\2\u00bf"+
		"\u00c0\3\2\2\2\u00c0\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00c2\3\2"+
		"\2\2\u00c2\u00c4\7+\2\2\u00c3\u00b0\3\2\2\2\u00c3\u00ba\3\2\2\2\u00c4"+
		",\3\2\2\2\u00c5\u00c6\7*\2\2\u00c6\u00ca\7*\2\2\u00c7\u00c8\7]\2\2\u00c8"+
		"\u00ca\7]\2\2\u00c9\u00c5\3\2\2\2\u00c9\u00c7\3\2\2\2\u00ca.\3\2\2\2\u00cb"+
		"\u00cc\7+\2\2\u00cc\u00d0\7+\2\2\u00cd\u00ce\7_\2\2\u00ce\u00d0\7_\2\2"+
		"\u00cf\u00cb\3\2\2\2\u00cf\u00cd\3\2\2\2\u00d0\60\3\2\2\2\u00d1\u00d5"+
		"\t\7\2\2\u00d2\u00d4\t\b\2\2\u00d3\u00d2\3\2\2\2\u00d4\u00d7\3\2\2\2\u00d5"+
		"\u00d3\3\2\2\2\u00d5\u00d6\3\2\2\2\u00d6\62\3\2\2\2\u00d7\u00d5\3\2\2"+
		"\2\u00d8\u00d9\7j\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7v\2\2\u00db\u00dc"+
		"\7r\2\2\u00dc\u00de\3\2\2\2\u00dd\u00df\7u\2\2\u00de\u00dd\3\2\2\2\u00de"+
		"\u00df\3\2\2\2\u00df\u00e8\3\2\2\2\u00e0\u00e1\7h\2\2\u00e1\u00e2\7v\2"+
		"\2\u00e2\u00e8\7r\2\2\u00e3\u00e4\7u\2\2\u00e4\u00e5\7o\2\2\u00e5\u00e6"+
		"\7v\2\2\u00e6\u00e8\7r\2\2\u00e7\u00d8\3\2\2\2\u00e7\u00e0\3\2\2\2\u00e7"+
		"\u00e3\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00ea\7<\2\2\u00ea\u00eb\7\61"+
		"\2\2\u00eb\u00ed\7\61\2\2\u00ec\u00e7\3\2\2\2\u00ec\u00ed\3\2\2\2\u00ed"+
		"\u00ee\3\2\2\2\u00ee\u00ef\7y\2\2\u00ef\u00f0\7y\2\2\u00f0\u00f1\7y\2"+
		"\2\u00f1\u00f2\7\60\2\2\u00f2\u00f4\3\2\2\2\u00f3\u00f5\t\t\2\2\u00f4"+
		"\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2"+
		"\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00fa\7\60\2\2\u00f9\u00fb\t\n\2\2\u00fa"+
		"\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fc\u00fd\3\2"+
		"\2\2\u00fd\u0109\3\2\2\2\u00fe\u0100\7\61\2\2\u00ff\u0101\t\13\2\2\u0100"+
		"\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0100\3\2\2\2\u0102\u0103\3\2"+
		"\2\2\u0103\u0105\3\2\2\2\u0104\u0106\7\61\2\2\u0105\u0104\3\2\2\2\u0105"+
		"\u0106\3\2\2\2\u0106\u0108\3\2\2\2\u0107\u00fe\3\2\2\2\u0108\u010b\3\2"+
		"\2\2\u0109\u0107\3\2\2\2\u0109\u010a\3\2\2\2\u010a\64\3\2\2\2\u010b\u0109"+
		"\3\2\2\2\u010c\u010d\5\61\31\2\u010d\u010e\7\60\2\2\u010e\u010f\5\61\31"+
		"\2\u010f\66\3\2\2\2\u0110\u0111\7/\2\2\u0111\u0112\7/\2\2\u0112\u0113"+
		"\3\2\2\2\u0113\u0122\5\61\31\2\u0114\u0115\7/\2\2\u0115\u0116\7/\2\2\u0116"+
		"\u0117\7g\2\2\u0117\u0118\7z\2\2\u0118\u0119\7r\2\2\u0119\u011a\7t\2\2"+
		"\u011a\u011b\7g\2\2\u011b\u011c\7u\2\2\u011c\u011d\7u\2\2\u011d\u011e"+
		"\7k\2\2\u011e\u011f\7q\2\2\u011f\u0120\7p\2\2\u0120\u0122\7?\2\2\u0121"+
		"\u0110\3\2\2\2\u0121\u0114\3\2\2\2\u01228\3\2\2\2\u0123\u0124\7&\2\2\u0124"+
		"\u0125\5\61\31\2\u0125:\3\2\2\2\u0126\u0128\7/\2\2\u0127\u0126\3\2\2\2"+
		"\u0127\u0128\3\2\2\2\u0128\u012a\3\2\2\2\u0129\u012b\t\f\2\2\u012a\u0129"+
		"\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d"+
		"<\3\2\2\2\u012e\u012f\7?\2\2\u012f>\3\2\2\2\u0130\u0131\7=\2\2\u0131@"+
		"\3\2\2\2\u0132\u0133\7~\2\2\u0133\u0137\7~\2\2\u0134\u0135\7(\2\2\u0135"+
		"\u0137\7(\2\2\u0136\u0132\3\2\2\2\u0136\u0134\3\2\2\2\u0137B\3\2\2\2\u0138"+
		"\u0139\7-\2\2\u0139\u0145\7-\2\2\u013a\u013b\7/\2\2\u013b\u0145\7/\2\2"+
		"\u013c\u013d\7-\2\2\u013d\u0145\7?\2\2\u013e\u013f\7/\2\2\u013f\u0145"+
		"\7?\2\2\u0140\u0141\7\61\2\2\u0141\u0145\7?\2\2\u0142\u0143\7,\2\2\u0143"+
		"\u0145\7?\2\2\u0144\u0138\3\2\2\2\u0144\u013a\3\2\2\2\u0144\u013c\3\2"+
		"\2\2\u0144\u013e\3\2\2\2\u0144\u0140\3\2\2\2\u0144\u0142\3\2\2\2\u0145"+
		"D\3\2\2\2\u0146\u0147\7>\2\2\u0147\u014e\7?\2\2\u0148\u0149\7@\2\2\u0149"+
		"\u014e\7?\2\2\u014a\u014e\t\r\2\2\u014b\u014c\7?\2\2\u014c\u014e\7?\2"+
		"\2\u014d\u0146\3\2\2\2\u014d\u0148\3\2\2\2\u014d\u014a\3\2\2\2\u014d\u014b"+
		"\3\2\2\2\u014eF\3\2\2\2\u014f\u0151\t\16\2\2\u0150\u014f\3\2\2\2\u0151"+
		"\u0152\3\2\2\2\u0152\u0153\3\2\2\2\u0152\u0150\3\2\2\2\u0153H\3\2\2\2"+
		"\u0154\u0155\13\2\2\2\u0155J\3\2\2\2\35\2Y_go\u00ae\u00b6\u00c0\u00c3"+
		"\u00c9\u00cf\u00d5\u00de\u00e7\u00ec\u00f6\u00fc\u0102\u0105\u0109\u0121"+
		"\u0127\u012c\u0136\u0144\u014d\u0152\3\b\2\2";
=======
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\3\2\3\2\3\3\3\3\3\4"+
		"\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f"+
		"\3\r\3\r\3\r\3\r\7\rl\n\r\f\r\16\ro\13\r\3\r\3\r\3\r\3\r\3\r\6\rv\n\r"+
		"\r\r\16\rw\3\r\5\r{\n\r\3\16\3\16\6\16\177\n\16\r\16\16\16\u0080\3\16"+
		"\3\16\3\17\3\17\6\17\u0087\n\17\r\17\16\17\u0088\3\17\3\17\3\20\3\20\7"+
		"\20\u008f\n\20\f\20\16\20\u0092\13\20\3\20\3\20\3\21\3\21\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3"+
		"\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3"+
		"\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\5\36\u00ec"+
		"\n\36\3\37\3\37\7\37\u00f0\n\37\f\37\16\37\u00f3\13\37\3 \3 \3 \3!\5!"+
		"\u00f9\n!\3!\6!\u00fc\n!\r!\16!\u00fd\3\"\3\"\3#\3#\3$\3$\3$\3$\5$\u0108"+
		"\n$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u0116\n%\3&\3&\3&\3&\3&\3&"+
		"\3&\5&\u011f\n&\3\'\6\'\u0122\n\'\r\'\16\'\u0123\3(\3(\4m\u0123\2)\3\3"+
		"\5\2\7\2\t\2\13\2\r\4\17\5\21\6\23\7\25\b\27\t\31\n\33\13\35\f\37\r!\16"+
		"#\17%\20\'\21)\22+\23-\24/\25\61\26\63\27\65\30\67\319\32;\33=\34?\35"+
		"A\36C\37E G!I\"K#M$O%\3\2\13\b\2##&(,<B\\``c|\3\2))\3\2$$\4\2\f\f\17\17"+
		"\5\2\13\f\17\17\"\"\5\2C\\aac|\6\2\62;C\\aac|\5\2\62;C\\c|\4\2>>@@\2\u013b"+
		"\2\3\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3"+
		"\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2"+
		"\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2"+
		"\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2"+
		"\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2"+
		"\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\3Q"+
		"\3\2\2\2\5S\3\2\2\2\7U\3\2\2\2\tW\3\2\2\2\13Y\3\2\2\2\r[\3\2\2\2\17]\3"+
		"\2\2\2\21_\3\2\2\2\23a\3\2\2\2\25c\3\2\2\2\27e\3\2\2\2\31z\3\2\2\2\33"+
		"|\3\2\2\2\35\u0084\3\2\2\2\37\u008c\3\2\2\2!\u0095\3\2\2\2#\u0097\3\2"+
		"\2\2%\u00a0\3\2\2\2\'\u00a3\3\2\2\2)\u00a8\3\2\2\2+\u00ad\3\2\2\2-\u00b2"+
		"\3\2\2\2/\u00b5\3\2\2\2\61\u00b9\3\2\2\2\63\u00bf\3\2\2\2\65\u00c2\3\2"+
		"\2\2\67\u00c8\3\2\2\29\u00d1\3\2\2\2;\u00eb\3\2\2\2=\u00ed\3\2\2\2?\u00f4"+
		"\3\2\2\2A\u00f8\3\2\2\2C\u00ff\3\2\2\2E\u0101\3\2\2\2G\u0107\3\2\2\2I"+
		"\u0115\3\2\2\2K\u011e\3\2\2\2M\u0121\3\2\2\2O\u0125\3\2\2\2QR\7.\2\2R"+
		"\4\3\2\2\2ST\7-\2\2T\6\3\2\2\2UV\7/\2\2V\b\3\2\2\2WX\7,\2\2X\n\3\2\2\2"+
		"YZ\7\61\2\2Z\f\3\2\2\2[\\\7*\2\2\\\16\3\2\2\2]^\7+\2\2^\20\3\2\2\2_`\7"+
		"}\2\2`\22\3\2\2\2ab\7\177\2\2b\24\3\2\2\2cd\7]\2\2d\26\3\2\2\2ef\7_\2"+
		"\2f\30\3\2\2\2gh\7&\2\2hi\7}\2\2im\3\2\2\2jl\13\2\2\2kj\3\2\2\2lo\3\2"+
		"\2\2mn\3\2\2\2mk\3\2\2\2np\3\2\2\2om\3\2\2\2p{\7\177\2\2qr\7&\2\2rs\7"+
		"*\2\2su\3\2\2\2tv\t\2\2\2ut\3\2\2\2vw\3\2\2\2wu\3\2\2\2wx\3\2\2\2xy\3"+
		"\2\2\2y{\7+\2\2zg\3\2\2\2zq\3\2\2\2{\32\3\2\2\2|~\7)\2\2}\177\n\3\2\2"+
		"~}\3\2\2\2\177\u0080\3\2\2\2\u0080~\3\2\2\2\u0080\u0081\3\2\2\2\u0081"+
		"\u0082\3\2\2\2\u0082\u0083\7)\2\2\u0083\34\3\2\2\2\u0084\u0086\7$\2\2"+
		"\u0085\u0087\n\4\2\2\u0086\u0085\3\2\2\2\u0087\u0088\3\2\2\2\u0088\u0086"+
		"\3\2\2\2\u0088\u0089\3\2\2\2\u0089\u008a\3\2\2\2\u008a\u008b\7$\2\2\u008b"+
		"\36\3\2\2\2\u008c\u0090\7%\2\2\u008d\u008f\n\5\2\2\u008e\u008d\3\2\2\2"+
		"\u008f\u0092\3\2\2\2\u0090\u008e\3\2\2\2\u0090\u0091\3\2\2\2\u0091\u0093"+
		"\3\2\2\2\u0092\u0090\3\2\2\2\u0093\u0094\b\20\2\2\u0094 \3\2\2\2\u0095"+
		"\u0096\t\6\2\2\u0096\"\3\2\2\2\u0097\u0098\7h\2\2\u0098\u0099\7w\2\2\u0099"+
		"\u009a\7p\2\2\u009a\u009b\7e\2\2\u009b\u009c\7v\2\2\u009c\u009d\7k\2\2"+
		"\u009d\u009e\7q\2\2\u009e\u009f\7p\2\2\u009f$\3\2\2\2\u00a0\u00a1\7k\2"+
		"\2\u00a1\u00a2\7h\2\2\u00a2&\3\2\2\2\u00a3\u00a4\7v\2\2\u00a4\u00a5\7"+
		"j\2\2\u00a5\u00a6\7g\2\2\u00a6\u00a7\7p\2\2\u00a7(\3\2\2\2\u00a8\u00a9"+
		"\7g\2\2\u00a9\u00aa\7n\2\2\u00aa\u00ab\7k\2\2\u00ab\u00ac\7h\2\2\u00ac"+
		"*\3\2\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7n\2\2\u00af\u00b0\7u\2\2\u00b0"+
		"\u00b1\7g\2\2\u00b1,\3\2\2\2\u00b2\u00b3\7h\2\2\u00b3\u00b4\7k\2\2\u00b4"+
		".\3\2\2\2\u00b5\u00b6\7h\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7t\2\2\u00b8"+
		"\60\3\2\2\2\u00b9\u00ba\7y\2\2\u00ba\u00bb\7j\2\2\u00bb\u00bc\7k\2\2\u00bc"+
		"\u00bd\7n\2\2\u00bd\u00be\7g\2\2\u00be\62\3\2\2\2\u00bf\u00c0\7f\2\2\u00c0"+
		"\u00c1\7q\2\2\u00c1\64\3\2\2\2\u00c2\u00c3\7d\2\2\u00c3\u00c4\7t\2\2\u00c4"+
		"\u00c5\7g\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7m\2\2\u00c7\66\3\2\2\2\u00c8"+
		"\u00c9\7e\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7v\2\2"+
		"\u00cc\u00cd\7k\2\2\u00cd\u00ce\7p\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0"+
		"\7g\2\2\u00d08\3\2\2\2\u00d1\u00d2\7f\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d4"+
		"\7p\2\2\u00d4\u00d5\7g\2\2\u00d5:\3\2\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8"+
		"\7e\2\2\u00d8\u00d9\7j\2\2\u00d9\u00ec\7q\2\2\u00da\u00db\7e\2\2\u00db"+
		"\u00dc\7c\2\2\u00dc\u00ec\7v\2\2\u00dd\u00de\7n\2\2\u00de\u00ec\7u\2\2"+
		"\u00df\u00e0\7n\2\2\u00e0\u00ec\7n\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3"+
		"\7k\2\2\u00e3\u00e4\7o\2\2\u00e4\u00ec\7g\2\2\u00e5\u00e6\7y\2\2\u00e6"+
		"\u00e7\7i\2\2\u00e7\u00e8\7g\2\2\u00e8\u00ec\7v\2\2\u00e9\u00ea\7e\2\2"+
		"\u00ea\u00ec\7f\2\2\u00eb\u00d6\3\2\2\2\u00eb\u00da\3\2\2\2\u00eb\u00dd"+
		"\3\2\2\2\u00eb\u00df\3\2\2\2\u00eb\u00e1\3\2\2\2\u00eb\u00e5\3\2\2\2\u00eb"+
		"\u00e9\3\2\2\2\u00ec<\3\2\2\2\u00ed\u00f1\t\7\2\2\u00ee\u00f0\t\b\2\2"+
		"\u00ef\u00ee\3\2\2\2\u00f0\u00f3\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f1\u00f2"+
		"\3\2\2\2\u00f2>\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f4\u00f5\7&\2\2\u00f5\u00f6"+
		"\5=\37\2\u00f6@\3\2\2\2\u00f7\u00f9\7/\2\2\u00f8\u00f7\3\2\2\2\u00f8\u00f9"+
		"\3\2\2\2\u00f9\u00fb\3\2\2\2\u00fa\u00fc\t\t\2\2\u00fb\u00fa\3\2\2\2\u00fc"+
		"\u00fd\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fd\u00fe\3\2\2\2\u00feB\3\2\2\2"+
		"\u00ff\u0100\7?\2\2\u0100D\3\2\2\2\u0101\u0102\7=\2\2\u0102F\3\2\2\2\u0103"+
		"\u0104\7~\2\2\u0104\u0108\7~\2\2\u0105\u0106\7(\2\2\u0106\u0108\7(\2\2"+
		"\u0107\u0103\3\2\2\2\u0107\u0105\3\2\2\2\u0108H\3\2\2\2\u0109\u010a\7"+
		"-\2\2\u010a\u0116\7-\2\2\u010b\u010c\7/\2\2\u010c\u0116\7/\2\2\u010d\u010e"+
		"\7-\2\2\u010e\u0116\7?\2\2\u010f\u0110\7/\2\2\u0110\u0116\7?\2\2\u0111"+
		"\u0112\7\61\2\2\u0112\u0116\7?\2\2\u0113\u0114\7,\2\2\u0114\u0116\7?\2"+
		"\2\u0115\u0109\3\2\2\2\u0115\u010b\3\2\2\2\u0115\u010d\3\2\2\2\u0115\u010f"+
		"\3\2\2\2\u0115\u0111\3\2\2\2\u0115\u0113\3\2\2\2\u0116J\3\2\2\2\u0117"+
		"\u0118\7>\2\2\u0118\u011f\7?\2\2\u0119\u011a\7@\2\2\u011a\u011f\7?\2\2"+
		"\u011b\u011f\t\n\2\2\u011c\u011d\7?\2\2\u011d\u011f\7?\2\2\u011e\u0117"+
		"\3\2\2\2\u011e\u0119\3\2\2\2\u011e\u011b\3\2\2\2\u011e\u011c\3\2\2\2\u011f"+
		"L\3\2\2\2\u0120\u0122\t\2\2\2\u0121\u0120\3\2\2\2\u0122\u0123\3\2\2\2"+
		"\u0123\u0124\3\2\2\2\u0123\u0121\3\2\2\2\u0124N\3\2\2\2\u0125\u0126\13"+
		"\2\2\2\u0126P\3\2\2\2\21\2mwz\u0080\u0088\u0090\u00eb\u00f1\u00f8\u00fd"+
		"\u0107\u0115\u011e\u0123\3\b\2\2";
>>>>>>> 5074812a9eef5190831be8e6581aa425ab10d9ec
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}